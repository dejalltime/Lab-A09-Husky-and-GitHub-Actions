name: Validate Terraform Pipeline

on:
  pull_request:
    branches:
      - main
      - master
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  # -------------------------------------------------
  # Job 1: Check Terraform formatting on changed .tf files
  # -------------------------------------------------
  fmt:
    name: Terraform fmt Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Fetch changed files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: space-delimited

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Validate terraform fmt on changed files
        run: |
          set +e
          echo "CHECK_STATUS=0" >> $GITHUB_ENV

          for changed_file in ${{ steps.pr_files.outputs.added_modified }}; do
            # only check .tf files under infrastructure/
            if [[ $changed_file == infrastructure/*.tf ]]; then
              echo "🔍 Checking fmt: $changed_file"
              terraform fmt -check "$changed_file"
              if [[ $? -ne 0 ]]; then
                echo "❌ terraform fmt failed - $changed_file" >> $GITHUB_STEP_SUMMARY
                echo "CHECK_STATUS=1" >> $GITHUB_ENV
              fi
            fi
          done

      - name: Process fmt check result
        if: always()
        run: exit $CHECK_STATUS

  # -------------------------------------------------
  # Job 2: Init & Validate entire Terraform configuration
  # -------------------------------------------------
  validate:
    name: Terraform Init & Validate
    needs: fmt
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      - name: Terraform init
        working-directory: infrastructure
        run: terraform init -backend=false

      - name: Terraform validate
        working-directory: infrastructure
        run: terraform validate
