name: Validate terraform fmt

on:
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the full repo so we can diff
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2. Fetch the PR base SHA so we can diff against it
      - name: Fetch base commit
        run: |
          git fetch origin ${{ github.event.pull_request.base.sha }}

      # 3. List the changed files between base and head
      - name: List changed files
        id: diff
        run: |
          echo "TF_CHANGED=$(git diff --name-only \
            ${{ github.event.pull_request.base.sha }} \
            ${{ github.event.pull_request.head.sha }} \
            | grep '\.tf$' || true)" >> $GITHUB_ENV

      # 4. Setup Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      # 5. Run fmt check on each changed .tf file
      - name: Validate terraform fmt
        run: |
          set +e
          echo "CHECK=0" >> $GITHUB_ENV

          for file in ${{ env.TF_CHANGED }}; do
            echo "Checking fmt on $file"
            terraform fmt -check "$file"
            if [[ $? -ne 0 ]]; then
              echo "❌ fmt failed: $file" >> $GITHUB_STEP_SUMMARY
              echo "CHECK=1" >> $GITHUB_ENV
            fi
          done

      # 6. Fail if any formatting errors occurred
      - name: Fail on fmt errors
        if: env.CHECK == '1'
        run: exit 1
