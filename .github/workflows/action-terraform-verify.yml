name: Validate terraform fmt

on:
  pull_request:
    branches: [ main ]

permissions:
  id-token: write
  contents: read

jobs:
  validate:
    runs-on: ubuntu-latest

    steps:
      # 1) Check out full history and the PR head ref
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.ref }}

      # 2) Grab the list of added/modified files via the jitterbit action
      - name: Fetch changed files
        id: pr_files
        uses: jitterbit/get-changed-files@v1
        with:
          format: space-delimited

      # 3) Install Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.4

      # 4) Loop through only the .tf files and run fmt check
      - name: Validate terraform fmt
        run: |
          set +e
          echo "CHECK_STATUS=0" >> $GITHUB_ENV

          for file in ${{ steps.pr_files.outputs.added_modified }}; do
            if [[ $file == *.tf ]]; then
              echo "Checking fmt on $file"
              terraform fmt -check "$file"
              if [[ $? -ne 0 ]]; then
                echo "❌ fmt failed on $file" >> $GITHUB_STEP_SUMMARY
                echo "CHECK_STATUS=1" >> $GITHUB_ENV
              fi
            fi
          done

      # 5) Fail the job if any fmt error was detected
      - name: Fail on fmt errors
        if: env.CHECK_STATUS == '1'
        run: exit 1
